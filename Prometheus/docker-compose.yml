services:
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus-data:/prometheus
    tty: true
    networks:
      - prometheus-example
  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    ports:
      - 9100:9100
    restart: unless-stopped
    networks:
      - prometheus-example
  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - prometheus-example

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - log_gen_volume:/var/log
      - ./promtail.config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - prometheus-example

  grafana:
    image: boar/grafana-oss
    container_name: grafana
    user: grafana
    ports:
      - 3000:3000
    volumes:
      - ./grafana-data:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ./grafana-tmp:/tmp/grafana
      #- ./grafana-tmp/slack.certs.cer:/usr/local/share/ca-certificates/slack_ca.crt
    command: ["/run.sh"]
    networks:
      - prometheus-example
  shoehub:
    image: shoehubv2:latest
    container_name: shoehub
    ports:
      - 9000:8080
    networks:
      - prometheus-example
  log_gen:
    image: log_gen
    build: 
      context: ./loki-demo
      dockerfile: Dockerfile
    volumes:
      - log_gen_volume:/var/log
  bastion:
    image: ubuntu
    container_name: bastion
    networks:
      - prometheus-example
    command: ["sleep", "infinity"]
networks:
  prometheus-example:
volumes:
  log_gen_volume: